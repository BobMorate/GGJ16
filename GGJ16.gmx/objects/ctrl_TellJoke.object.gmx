<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Joke inits and stuff

alarm[0] = 90;

sentence = " "
sentence_number = 1;

// Joke inits

switch (global.JokeNo)
    {
    case 1:
        var i = 4;
        repeat(5)
            {
            global.joke1[i] = 0;
            i -= 1;
            }
        break;
    case 2:
        var i = 5;
        repeat(6)
            {
            global.joke2[i] = 0;
            i -= 1;
            }
        break;
    case 3:
        var i = 15;
        repeat(16)
            {
            global.joke3[i] = 0;
            i -= 1;
            }
        break;
    case 4:
        var i = 10;
        repeat(11)
            {
            global.joke4[i] = 0;
            i -= 1;
            }
        break;
    case 5:
        var i = 27;
        repeat(28)
            {
            global.joke5[i] = 0;
            i -= 1;
            }
        break;
    }

alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// process joke

switch (global.JokeNo)
    {
    case 1:
        scr_joke1();
        break;
    case 2:
        scr_joke2();
        break;
    case 3:
        scr_joke3();
        break;
    case 4:
        scr_joke4();
        break;
    case 5:
        scr_joke5();
        break;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sentence_number == 1)
    {
    switch (global.JokeNo)
        {
        case 1:
        case 2:
            alarm[0] = 420;
            break;
        case 3:
            alarm[0] = 700;
            break;
        case 4:
            alarm[0] = 540;
            break;
        case 5:
            alarm[0] = 860;
            break;
        }
    sentence_number = 2;
    exit;
    }
    
if (sentence_number == 2)
    {
    alarm[0] = 60;
    if (global.JokeNo != 5) sentence_number = 3;
    else if (global.JokeNo == 5) sentence_number = 4;
    exit;
    }

if (sentence_number == 3)
    {
    sentence = choose("No?", "Not digging it?", "Not funny?");
    alarm[0] = 120;
    sentence_number = 4;
    exit;
    }
    
if (sentence_number == 4)
    {
    if (global.JokeNo == 5)
        {
        with (ctrl_ui)
            {
            instance_destroy();
            }
        sentence = choose("Thank you, you have been a wonderful audience. (Well, not really...)");
        alarm[0] = 180;
        sentence_number = 5;
        exit;
        }
    else if (global.JokeNo != 5)
        {
        sentence = choose("Well, then...", "Okay, how bout...", "Maybe this joke...");
        alarm[0] = 180;
        sentence_number = 5;
        exit;
        }
    }

if (sentence_number == 5)
    {
    if (global.JokeNo == 5)
        {
        // room_goto(rm_title);
        instance_create(x, y, obj_dim);
        sentence = " ";
        }
    else if (global.JokeNo != 5)
        {
        with (ctrl_ui)
            {
            event_user(0);
            ctrl_ui.sentence += 1;
            }
        room_goto(rm_thinking);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_set_colour(c_black);


if (sentence_number == 2)
    {
    switch (global.JokeNo)
        {
        case 1:
            
            draw_set_colour(c_white);
            draw_text_ext(321, 33, string(global.joke1[0]) + string(global.joke1[1]) + string(global.joke1[2]) + string(global.joke1[3]) + string(global.joke1[4]) , -1, 440);
            draw_set_colour(c_black);
            draw_text_ext(320, 32, string(global.joke1[0]) + string(global.joke1[1]) + string(global.joke1[2]) + string(global.joke1[3]) + string(global.joke1[4]) , -1, 440);
            break;
        case 2:
            draw_set_colour(c_white);
            draw_text_ext(321, 33, string(global.joke2[0]) + string(global.joke2[1]) + string(global.joke2[2]) + string(global.joke2[3]) + string(global.joke2[4]) + string(global.joke2[5]) , -1, 440);
            draw_set_colour(c_black);
            draw_text_ext(320, 32, string(global.joke2[0]) + string(global.joke2[1]) + string(global.joke2[2]) + string(global.joke2[3]) + string(global.joke2[4]) + string(global.joke2[5]) , -1, 440);
            break;
        case 3:
            draw_set_colour(c_white);
            draw_text_ext(321, 33, string(global.joke3[0]) + string(global.joke3[1]) + string(global.joke3[2]) + string(global.joke3[3]) + string(global.joke3[4]) + string(global.joke3[5]) + string(global.joke3[6]) + string(global.joke3[7]) + string(global.joke3[8]) + string(global.joke3[9]) + string(global.joke3[10]) + string(global.joke3[11]) + string(global.joke3[12]) + string(global.joke3[13]) + string(global.joke3[14]) + string(global.joke3[15]) , -1, 440);
            draw_set_colour(c_black);
            draw_text_ext(320, 32, string(global.joke3[0]) + string(global.joke3[1]) + string(global.joke3[2]) + string(global.joke3[3]) + string(global.joke3[4]) + string(global.joke3[5]) + string(global.joke3[6]) + string(global.joke3[7]) + string(global.joke3[8]) + string(global.joke3[9]) + string(global.joke3[10]) + string(global.joke3[11]) + string(global.joke3[12]) + string(global.joke3[13]) + string(global.joke3[14]) + string(global.joke3[15]) , -1, 440);
            break;
        case 4:
            draw_set_colour(c_white);
            draw_text_ext(321, 33, string(global.joke4[0]) + string(global.joke4[1]) + string(global.joke4[2]) + string(global.joke4[3]) + string(global.joke4[4]) + string(global.joke4[5]) + string(global.joke4[6]) + string(global.joke4[7]) + string(global.joke4[8]) + string(global.joke4[9]) + string(global.joke4[10]) , -1, 440);
            draw_set_colour(c_black);
            draw_text_ext(320, 32, string(global.joke4[0]) + string(global.joke4[1]) + string(global.joke4[2]) + string(global.joke4[3]) + string(global.joke4[4]) + string(global.joke4[5]) + string(global.joke4[6]) + string(global.joke4[7]) + string(global.joke4[8]) + string(global.joke4[9]) + string(global.joke4[10]) , -1, 440);
            break;
        case 5:
            draw_set_colour(c_white);
            draw_text_ext(321, 33, string(global.joke5[0]) + string(global.joke5[1]) + string(global.joke5[2]) + string(global.joke5[3]) + string(global.joke5[4]) + string(global.joke5[5]) + string(global.joke5[6]) + string(global.joke5[7]) + string(global.joke5[8]) + string(global.joke5[9]) + string(global.joke5[10]) + string(global.joke5[11]) + string(global.joke5[12]) + string(global.joke5[13]) + string(global.joke5[14]) + string(global.joke5[15]) + string(global.joke5[16]) + string(global.joke5[17]) + string(global.joke5[18]) + string(global.joke5[19]) + string(global.joke5[20]) + string(global.joke5[21]) + string(global.joke5[22]) + string(global.joke5[23]) + string(global.joke5[24]) + string(global.joke5[25]) + string(global.joke5[26]) + string(global.joke5[27]) , -1, 440);
            draw_set_colour(c_black);
            draw_text_ext(320, 32, string(global.joke5[0]) + string(global.joke5[1]) + string(global.joke5[2]) + string(global.joke5[3]) + string(global.joke5[4]) + string(global.joke5[5]) + string(global.joke5[6]) + string(global.joke5[7]) + string(global.joke5[8]) + string(global.joke5[9]) + string(global.joke5[10]) + string(global.joke5[11]) + string(global.joke5[12]) + string(global.joke5[13]) + string(global.joke5[14]) + string(global.joke5[15]) + string(global.joke5[16]) + string(global.joke5[17]) + string(global.joke5[18]) + string(global.joke5[19]) + string(global.joke5[20]) + string(global.joke5[21]) + string(global.joke5[22]) + string(global.joke5[23]) + string(global.joke5[24]) + string(global.joke5[25]) + string(global.joke5[26]) + string(global.joke5[27]) , -1, 440);
            break;
        }
    }

if (sentence_number &gt; 2)
    {
    draw_set_colour(c_white);
    draw_text(321, 33, sentence);
    draw_set_colour(c_black);
    draw_text(320, 32, sentence);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
