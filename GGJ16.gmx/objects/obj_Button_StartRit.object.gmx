<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_StartRitualButton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clickable = true;
limit = 0.5;
value = random_range(0.02,0.03);
current_dir = 1;
hover = true;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Makes the button float

if hover = true
    {
        if current_dir == 1
         {
          if vspeed &lt; limit {vspeed += value} else current_dir = 0;
         }
        
        else
        
        if current_dir == 0
         {
          if vspeed &gt; -limit {vspeed -= value} else current_dir = 1;
         }
     }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Compare selection to ritual
if clickable = true
    {
        show_debug_message("");
        show_debug_message("SELECTION is " + formatWordLists(global.selection));
        show_debug_message("");
        
        //checks which words in the selection are parte of the ritual
        for (var i = 0; i&lt;6; i++){
            var pos = ds_list_find_index(global.pool, global.selection[| i]);

            if (ds_list_find_index(global.rit, global.selection[| i])!=-1) {
                global.feedback[| i]= 1; 
                global.scrolls[| pos].image_index=2;
                show_debug_message("    " + global.scrolls[| pos].word + " presente en el Ritual -&gt; pinto de amarillo");              
            }
            else {
                global.feedback[| i]= 0; 
                global.scrolls[| pos].image_index=3;
                show_debug_message("          " + global.scrolls[| pos].word + " no está en el Ritual -&gt; pinto de GRIS");
            }
        }
        
        
        //checks if existing words are in their correct positions and colours them "green"
        show_debug_message("");
        
        for (var i = 0; i&lt;6; i++){
            var pos = ds_list_find_index(global.pool, global.selection[| i]);
            if (global.selection[| i]==global.rit[| i]) {

                global.feedback[| i]= 2; 
                global.scrolls[| pos].image_index=1;
                show_debug_message("    " + global.scrolls[| pos].word + " se seleccionó en el lugar correcto -&gt; pinto de verde");
            }
        }
        
        
        //decreases number of "lives" and checks game over condition
        lives-=1;
        instance_create(obj_wizard_idle.x, obj_wizard_idle.y, obj_wizard_facepalm);
        instance_create(254, 430, obj_facepalm_motion);
        with obj_wizard_idle
            {
            instance_destroy();
            }
        if (lives ==0){
            //game over condition met, display/transition to game over room
            show_debug_message("");
            show_debug_message("Game Over! :( ");
            audio_stop_all();
            room_goto(rm_gameover);
        }

        
        //displays feedback somehow

        show_debug_message("");        
        show_debug_message("SELECTION guesses are " + formatWordLists(global.feedback));
        show_debug_message("");
        show_debug_message("Remaining tries: " + string(global.lives));
        
        
        
        //check victory condition and display/transition to victory room
        var victory=0;
        for (var i = 0; i&lt;6; i++){
            if (global.feedback[| i]==2) {
                victory++;
            }
        }
        if (victory==6) {
            show_debug_message("");
            show_debug_message("VICTORY!!!");
            //reset game variables here
            audio_stop_all();
            room_goto(rm_victory);
        }
        
        clickable = false;
        with obj_reset
            {
            instance_destroy()
            }
        instance_create(200,60,obj_nextround);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if clickable == false
    {
    image_index = 1;
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
